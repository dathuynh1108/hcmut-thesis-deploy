[server]
[server.http]
scheme = "http"
host = "localhost"
port = "3000"

[server.grpc]
host = "http://localhost"
port = "50051"
binding_ip_address = "0.0.0.0"

[database]
[database.mongodb]
user = "root"
password = "12345"
host = "mongodb"
port = "27017"
db_name = "iot_security_app"
options = { auth_source = "admin", use_new_url_parser = true, use_unified_topology = true }



[socket_io]
[socket_io.events]
event_new = "event_new"
event_verified = "event_verified"


[cors]
[cors.websocket]
origin = "*"


[rabbitmq]
host = "10.110.109.86"
username = "guest"
password = "guest"
port = "5672"
scheme = "amqp"
virtual_host = "/"

[rabbitmq.exchanges]
[rabbitmq.exchanges.iot_mqtt_exchange]
name = "amq.topic"
type = "topic"

[rabbitmq.exchanges.iot_mqtt_exchange.queues]
[rabbitmq.exchanges.iot_mqtt_exchange.queues.iot_event_new]
name = "iot_event_new"
binding_keys = ["home.alarm.zone_open", "home.alarm.zone_ok"]
zone_open_key = "zone_open"





[rabbitmq.exchanges.event_processing]
name = "event_processing"
type = "topic"

[rabbitmq.exchanges.event_processing.queues]
[rabbitmq.exchanges.event_processing.queues.event_created_with_media]
name = "event_created_with_media"
binding_keys = ["event.created.media.iot.*", "event.created.media.camera.*"]
routing_key_prefix = {event_created_with_media_iot = "event.created.media.iot", event_created_with_media_camera = "event.created.media.camera"}

[rabbitmq.exchanges.event_processing.queues.event_verified]
name = "event_verified"
binding_keys = ["event.verified.iot.*", "event.verified.camera.*"]
routing_key_prefix = {event_verified_iot = "event.verified.iot", event_verified_camera = "event.verified.camera"}


[rabbitmq.exchanges.stream_processing]
name = "stream_processsing"
type = "topic"

[rabbitmq.exchanges.stream_processing.queues]
[rabbitmq.exchanges.stream_processing.queues.camera_event_new]
name = "camera_event_new"
binding_keys = ["event.new.camera.*"] # not have event.new.iot because iot event is published to another queue of another exchange
routing_key_prefix = {event_new_camera = "event.new.camera"}






    # [[rabbitmq.exchanges]]
    #     name = "amq.topic"
    #     type = "topic"
    #     [[rabbitmq.exchanges.queues]]
    #         name = "iot_event_new"
    #         binding_keys = ["home.alarm.zone_open", "home.alarm.zone_ok"]


    # [[rabbitmq.exchanges]]
    #     name = "event_processing"
    #     type = "topic"
    #     [[rabbitmq.exchanges.queues]]
    #         name = "event_created_with_media"
    #         binding_keys = ["event.created.media.iot.*", "event.created.media.camera.*"]

    #     [[rabbitmq.exchanges.queues]]
    #         name = "event_verified"
    #         binding_keys = ["event.verified.iot.*", "event.verified.camera.*"]
    #         routing_key_prefix = {event_verified_iot = "event.verified.iot", event_verified_camera = "event.verified.camera"}


    # [[rabbitmq.exchanges]]
    #     name = "stream_processsing"
    #     type = "topic"
    #     [[rabbitmq.exchanges.queues]]
    #         name = "camera_event_new"
    #         binding_keys = ["event.new.camera.*"] # not have event.new.iot because iot event is published to another queue of another exchange
    #         routing_key_prefix = {event_new_camera = "event.new.camera"}


[ai_server]
[ai_server.http]
host = "localhost"
port = "5000"
scheme = "http"
[ai_server.grpc]
host = "localhost"
port = "5000"

[controller_server]
[controller_server.grpc]
host = "controller"
port = "5551"

